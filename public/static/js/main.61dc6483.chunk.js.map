{"version":3,"sources":["components/NavBar.js","components/AdminList.js","components/AdminForm.js","components/StoreCard.js","components/StoreForm.js","components/StoreReports.js","components/SideBar.js","pages/MerchantPage.js","Merchant.js","components/ProductsTable.js","components/AdminDetails.js","pages/Bargraph.js","pages/Piechart.js","components/StoreChart.js","pages/StorePage.js","components/ClerkPage/ItemsTables/ReadOnlyRow.js","components/ClerkPage/ItemsTables/EditableRow.js","components/ClerkPage/ClerkNavbar/SidebarData.js","components/ClerkPage/ClerkNavbar/Navbar.js","components/ClerkPage/ItemsTables/Table.js","components/ClerkPage/RequestItemTable.js/ReadOnlyRow.js","components/ClerkPage/RequestItemTable.js/EditableRow.js","components/ClerkPage/RequestItemTable.js/RequestTable.js","components/ClerkPage/ClerkPagex.js","MainLandingPage/MainBar/MainBar.jsx","MainLandingPage/footer/Footer.js","MainLandingPage/Signin/MerchantLogin/MerchantLogIn.jsx","MainLandingPage/Signin/AdminLogin/AdminLogin.jsx","MainLandingPage/Signin/ClerkLogin/ClerkLogin.jsx","MainLandingPage/RegisterMerchant/Register.js","components/sidebar/SideBar.jsx","components/clerks/Clerks.jsx","components/inventory/Inventory.jsx","pages/Linegraph.js","components/analytics/InventoryAnalytics.jsx","ClerkLandingPage.js","MainLandingPage/ShowCase.js","MainLandingPage/Landing.jsx","components/orders/Orders.jsx","components/orders/OrderRequests.jsx","App.js","features/items/ItemAPIService.js","features/items/ItemSlice.js","features/orders/OrderAPIService.js","features/orders/OrderSlice.js","app/store.js","index.js"],"names":["NavBar","navigate","useNavigate","className","type","onClick","AdminList","admins","onDeleteAdmin","console","log","map","admin","full_name","email","store_id","axios","delete","id","then","AdminForm","onAddAdmin","mStores","setAdminUser","useState","fullname","setFullname","setEmail","storeId","setStoreId","password","setPassword","localStorage","getItem","userId","Grid","item","xs","action","onSubmit","event","preventDefault","fetch","method","body","JSON","stringify","status","token","user_id","headers","response","json","data","name","placeholder","required","autofocus","value","onChange","e","target","store","store_name","StoreCard","location","c","description","StoreForm","onAddStore","storename","setStorename","setLocation","setDescription","StoreReports","renderStores","SideBar","adminUser","setUser","showAdmin","setSetShowAdmin","List","ListItem","ListItemIcon","sx","color","ListItemText","r","ok","MerchantPage","getAdmins","getmStores","useEffect","stores","Merchant","user","setAdmins","setmStores","useCallback","exact","path","element","deletedAdmin","newAdmins","filter","newAdmin","newStore","ProductsTable","products","setProducts","items","product","quantity","AdminDetails","adminName","setAdminName","clerks","setClerks","clerk","Bargraph","setData","ResponsiveContainer","width","aspect","BarChart","height","margin","top","right","left","bottom","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","COLORS","Piechart","PieChart","Pie","label","cx","cy","midAngle","innerRadius","outerRadius","index","RADIAN","Math","PI","radius","x","cos","y","sin","textAnchor","dominantBaseline","labelLine","paddingAngle","entry","Cell","length","StoreChart","StorePage","params","useParams","mStore","setmStore","catch","err","message","ReadOnlyRow","handleEditClick","handleDeleteClick","inStock","spoilt","BuyingPrice","SellingPrice","EditableRow","editFormData","handleEditFormChange","handleCancelClick","buyingPrice","sellingPrice","SidebarData","title","icon","cName","Navbar","setClerkuser","sidebar","setSidebar","showSidebar","Provider","to","Table","setClerkUser","setItems","clerkId","clerk_id","addFormData","setAddFormData","setEditFormData","editItemId","setEditContactId","handleAddFormChange","fieldName","getAttribute","fieldValue","newFormData","formValues","contactId","newItems","findIndex","splice","newItem","nanoid","paid","editedItem","clerk_name","item_name","date","RequestTable","request","setRequest","requested_items","itemx","ClerkPage","isTrue","setIsTrue","class","MainBar","Footer","MerchantLogIn","error","alert","setItem","autoComplete","AdminLogin","ClerkLogin","Register","setFullName","password_confirmation","setPasswordConfirmation","role","setRole","children","setAdminuser","sidebarItems","text","Drawer","flexShrink","boxSizing","backgroundColor","cursor","variant","anchor","Typography","marginTop","button","Clerks","adminId","admin_id","formData","setFormData","createClerk","res","handleChange","Inventory","Linegraph","LineChart","Line","stroke","activeDot","InventoryAnalytics","ClerkLandingPage","ShowCase","alt","src","Landing","Orders","orders","setOrders","order","OrderRequests","App","clerkUser","fetchItems","get","ItemsAPIService","initialState","isError","loading","isSuccess","getItems","createAsyncThunk","_","thunkAPI","toString","rejectWithValue","ItemSlice","createSlice","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","payload","rejected","actions","fetchOrders","OrdersAPIService","getOrders","OrderSlice","configureStore","reducer","ItemReducer","OrderReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61dc6483.chunk.js","sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction NavBar() {\n\n  const navigate =useNavigate()\n  function handleClick(){\n    navigate(\"/merchant\")\n  }\n    return (\n        <div>\n             {/* top navigation bar */}\n      <nav className=\"navbar navbar-expand-lg navbar-dark fixed-top merchant-navbar\">\n        <div className=\"container-fluid\">\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"offcanvas\"\n            data-bs-target=\"#sidebar\"\n            aria-controls=\"offcanvasExample\"\n          >\n            <span\n              className=\"navbar-toggler-icon\"\n              data-bs-target=\"#sidebar\"\n            ></span>\n          </button>\n          <h3 className='merchant-logo' onClick={handleClick}>\n            Merchant\n          </h3>\n       \n       \n        </div>\n      </nav>\n        </div>\n    );\n}\n\nexport default NavBar;","import React from \"react\";\nimport axios from 'axios';\n\nfunction AdminList({ admins, onDeleteAdmin }) {\n  console.log(admins);\n\n  //map admins to table\n  return (\n    <div className=\"container\">\n      <h3>Admins List</h3>\n      {/* <table className=\"table table-info table-bordered table-sm merchant-table-font actual-table\"> */}\n      <table className=\"actual-table\">\n        <thead>\n          <tr>\n            <th>Full Name</th>\n            <th>Email</th>\n            <th>Store</th>\n             <th>Deactivate</th>\n            <th>Delete</th> \n          </tr>\n        </thead>\n        <tbody >\n          {admins.map((admin) => {\n\n            function handleDelete(){\n              axios.delete(`/admins/${admin.id}`)\n              .then(()=>{\n                 \n                  onDeleteAdmin(admin)\n              })\n            }\n\n            function handleDeactivate(){\n              \n            }\n\n            return (\n              <tr key={admin.id}>\n                <td >{admin.full_name}</td>\n                <td>{admin.email}</td>\n                <td>{admin.store_id}</td>\n                <td>\n                  <button onClick={handleDeactivate} className=\"read-btn\">Deactivate</button>\n                </td>\n                <td>\n                  <button onClick={handleDelete} className=\"delete-btn\">Delete</button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default AdminList;\n","import React, { useEffect, useState } from \"react\";\nimport AdminList from \"./AdminList\";\nimport ControlPointIcon from \"@mui/icons-material/ControlPoint\";\nimport Grid from \"@mui/material/Grid\";\n\nfunction AdminForm({ onAddAdmin, admins, onDeleteAdmin, mStores, setAdminUser }) {\n  const [fullname, setFullname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [storeId, setStoreId] = useState(1);\n  const [password, setPassword] = useState(\"\");\n  const [userId, setUserId] = useState(localStorage.getItem('userId'))\n\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    fetch(\"/admins\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        full_name: fullname,\n        email: email,\n        password: password,\n        store_id: storeId,\n        status: \"active\",\n        token: \"Notokenusage\",\n        user_id: userId,\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        onAddAdmin(data);\n        setAdminUser(data);\n        \n      });\n    setFullname(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  }\n \n\n  return (\n    <div>\n      <Grid item xs={8}>\n        <div className=\"container\">\n          <div className=\"row mt-5\">\n            <div className=\"col-md-6\">\n              <button\n                className=\"btn btn-success mb-2\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#form-modal\"\n              >\n                <ControlPointIcon />\n                Add Admin\n              </button>\n            </div>\n          </div>\n\n          <div className=\"modal\" id=\"form-modal\">\n            <div className=\"modal-dialog modal-dialog-centered\">\n              <div className=\"modal-content\">\n                {/* modal header */}\n                <div className=\"modal-header\">\n                  <h3 className=\"modal-title\">New Admin</h3>\n                  <button\n                    className=\"btn-close\"\n                    data-bs-dismiss=\"modal\"\n                  ></button>\n                </div>\n                {/*modal body */}\n                <div className=\"modal-body\">\n                  <form action=\"\" onSubmit={handleSubmit}>\n                    <div className=\"row\">\n                      <div className=\"col my-2\">\n                        <input\n                          type=\"text\"\n                          name=\"Full Name\"\n                          className=\"form-control\"\n                          placeholder=\"Full Name\"\n                          required\n                          autofocus\n                          value={fullname}\n                          onChange={(e) => setFullname(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"col my-2\">\n                        <input\n                          type=\"email\"\n                          className=\"form-control\"\n                          name=\"email\"\n                          value={email}\n                          onChange={(e) => setEmail(e.target.value)}\n                          placeholder=\"email\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col\">\n                        <input\n                          type=\"text\"\n                          name=\"password\"\n                          placeholder=\"Password\"\n                          className=\"form-control\"\n                          value={password}\n                          onChange={(e) => setPassword(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col\"> Store: &nbsp;&nbsp;\n                          \n                          <select\n                            className=\"btn btn-secondary dropdown-toggle\"\n                            value={storeId}\n                            onChange={(e) => setStoreId(e.target.value)}\n                          >\n                            {mStores.map((store) => {\n                              console.log(store);\n\n                              return (\n                                <option value={store.id}>\n                                  {store.store_name}\n                                </option>\n                              );\n                            })}\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col\" data-bs-dismiss=\"modal\">\n                        <input type=\"submit\" className=\"mbtn-submit\" />\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Grid>\n\n      <AdminList admins={admins} onDeleteAdmin={onDeleteAdmin} />\n    </div>\n  );\n}\n\nexport default AdminForm;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction StoreCard({store}) {\n    let storeId = store.id \n    const navigate  = useNavigate()\n    function handleClick(){\n        navigate(`/storepage/${storeId}`)\n    }\n    return (\n        <div className=\"col-12 col-md-6 col-lg-4\" >\n        <div className=\"card\">\n          <div className=\"store-card\">\n            <h2 className=\"store-card-title\">\n             {store.store_name}\n            </h2>\n            <p >\n             Location: {store.location}\n            </p>\n            <p c>\n             Description: {store.description}\n            </p>\n        \n            <button className=\"storecard-btn\" onClick={handleClick}>\n              Go to Store\n            </button>\n          </div>\n        </div>\n      </div>   \n    );\n}\n\nexport default StoreCard;","import React, { useState, useEffect } from \"react\";\nimport ControlPointIcon from '@mui/icons-material/ControlPoint';\nimport Grid from '@mui/material/Grid'\n\nfunction StoreForm({onAddStore}) {\n    const [storename, setStorename] = useState(\"\");\n    const [location, setLocation] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [userId, setUserId] = useState(localStorage.getItem('userId'))\n\n  \n    function handleSubmit(event) {\n      event.preventDefault();\n      fetch(\"/stores\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          store_name: storename,\n          location: location,\n          description: description,\n          user_id :userId\n        \n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data);\n          onAddStore(data);\n        });\n      setStorename(\"\");\n      setLocation(\"\");\n      setDescription(\"\");\n      \n    }\n  \n    return (\n      <div>\n  \n     <Grid item xs={8}>\n        <div className='container'>\n          <div className=\"row mt-5\">\n            <div className=\"col-md-6\">\n              <button className=\"btn btn-success mb-2\" data-bs-toggle=\"modal\"\n               data-bs-target=\"#form-modal\"><ControlPointIcon />Add Store</button>\n            </div>\n       \n          </div>\n  \n        <div className=\"modal\" id=\"form-modal\">\n          <div className=\"modal-dialog modal-dialog-centered\">\n            <div className=\"modal-content\">\n              {/* modal header */}\n              <div className=\"modal-header\">\n                <h3 className=\"modal-title\">New Store</h3>\n                <button className=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n              </div>\n              {/*modal body */}\n              <div className=\"modal-body\">\n              <form action=\"\" onSubmit={handleSubmit}>\n                  <div className=\"row\">\n                    <div className=\"col my-2\">\n                      <input type=\"text\"\n                        name=\"storeame\"\n                        className=\"form-control\"\n                        placeholder=\"Store name\"\n                        value={storename}\n                        onChange={(e) => setStorename(e.target.value)}\n                      />\n                    </div>\n                    <div className=\"row\">\n                    <div className=\"col my-2\">\n                      <input type=\"text\"\n                        className=\"form-control\"\n                        name=\"location\"\n                        value={location}\n                        onChange={(e) => setLocation(e.target.value)}\n                        placeholder='location'\n                      />\n                      </div>\n                     \n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <input type=\"text\"\n                        name=\"description\"\n                        placeholder=\"description\"\n                        className=\"form-control\"\n                        value={description}\n                        onChange={(e)=> setDescription(e.target.value)}\n                      />\n                    </div>\n                  \n                  </div>\n\n              \n                  <div className=\"row\">\n                  <div className=\"col\" data-bs-dismiss=\"modal\">\n                      <input type=\"submit\"\n                         className=\"mbtn-submit\"\n                        \n                        \n                      />\n                    </div>\n                    </div>\n                </form>\n              </div>\n           \n            </div>\n          </div>\n        </div>\n      </div>\n     </Grid>\n      </div>\n  \n    \n    );\n}\n\nexport default StoreForm;","import React from \"react\";\nimport StoreCard from \"./StoreCard\";\nimport StoreForm from \"./StoreForm\";\n\nfunction StoreReports({mStores, onAddStore,admins}) {\n  console.log(mStores)\n const renderStores = mStores.map((store)=>{\n    return <StoreCard key={store.id} store={store}/>\n})\n\n  return (\n    <div>\n      <StoreForm onAddStore={onAddStore} admins={admins}/>\n    <div className=\"container store-wrap\">\n\n      <h3>Available Stores</h3>\n      <div className=\"row g-3\">\n\n            {renderStores}\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default StoreReports;\n","import React, { useState } from \"react\";\nimport AdminForm from \"./AdminForm\";\nimport StoreReports from \"./StoreReports\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { ListItemIcon } from \"@mui/material\";\nimport PeopleAltOutlinedIcon from '@mui/icons-material/PeopleAltOutlined';\nimport ShoppingCartCheckoutOutlinedIcon from '@mui/icons-material/ShoppingCartCheckoutOutlined';\nimport { useNavigate } from \"react-router-dom\";\n\nfunction SideBar({setAdminUser,adminUser, onAddAdmin, admins, mStores, onDeleteAdmin, onAddStore,setUser  }) {\n  \n  const [showAdmin, setSetShowAdmin] = useState();\n\n  const navigate = useNavigate();\n\n  function handleLogout() {\n    fetch(\"auth/logout\", { method: \"DELETE\" }).then((r) => {\n      if (r.ok) {\n        setUser(null);\n        navigate(\"/mlog-in\")\n      }\n    });\n    \n  }\n\n  return (\n    <div>\n      {/* sidebar dashboard */}\n      <div className=\"container-fluid mt-5\">\n        <div className=\"row flex-nowrap\">\n          <nav className=\"col-auto col-md-3 col-xl-2 px-sm-2 px-0  merchant-sidebar\">\n            <div className=\"d-flex flex-column align-items-center align-items-sm-start px-3 pt-2 text-white min-vh-100\">\n              \n              <div className=\"mNav-items\">\n              <List>\n                <ListItem  onClick={() => {\n                      setSetShowAdmin(false);\n                    }}>\n                  <ListItemIcon sx={{ color: \"#ffffff\" }}>\n                  <ShoppingCartCheckoutOutlinedIcon color=\"#ffffff\"/>\n                  </ListItemIcon>\n                  <ListItemText>Stores</ListItemText>\n                </ListItem>\n\n                <ListItem    onClick={() => {\n                      setSetShowAdmin(true);\n                    }}>\n                  <ListItemIcon sx={{ color: \"#ffffff\" }}>\n                     <PeopleAltOutlinedIcon color=\"#ffffff\"/>\n                  </ListItemIcon>\n                  <ListItemText>Admins</ListItemText>\n                </ListItem>\n                <ListItem onClick={handleLogout}>\n                  <ListItemIcon sx={{ color: \"#ffffff\" }}>\n                 \n                  </ListItemIcon>\n                  <ListItemText>Log out</ListItemText>\n                </ListItem>\n              </List>\n              </div>\n              <hr />\n            </div>\n          </nav>\n          <div className=\"col py-3\">\n            {showAdmin ? (\n              <AdminForm\n                onAddAdmin={onAddAdmin}\n                admins={admins}\n                onDeleteAdmin={onDeleteAdmin}\n                mStores={mStores}\n                setAdminUser={setAdminUser}\n                adminUser={adminUser}\n              />\n            ) : (\n              <StoreReports\n                mStores={mStores}\n                onAddStore={onAddStore}\n                admins={admins}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SideBar;\n","import React, { useEffect, useState } from \"react\";\nimport NavBar from \"../components/NavBar\";\nimport SideBar from \"../components/SideBar\";\n\nfunction MerchantPage({adminUser, setAdminUser,admins, getAdmins, mStores, getmStores, onAddAdmin, onDeleteAdmin, onAddStore, setUser }) {\n  //fetch admins from db\n  const [userId, setUserId] = useState(localStorage.getItem('userId'))\n\n\n  useEffect(() => {\n    fetch(`/users/${userId}`).then((r) => {\n      if (r.ok) {\n        r.json().then((data) => {\n          console.log(data)\n          getAdmins(data.admins);\n        }); \n      }\n    });\n  }, []);\n\n  //fetch stores from db\n  useEffect(() => {\n    fetch(`/users/${userId}`).then((r) => {\n      if (r.ok) {\n        r.json().then((data) =>\n        {\n          console.log(data)\n          getmStores(data.stores)\n        } );\n      }\n    });\n  }, []);\n  console.log(mStores);\n  return (\n    <div>\n      <NavBar />\n\n      {/* sidebar dashboard */}\n\n      <SideBar adminUser={adminUser} setAdminUser={setAdminUser} onAddAdmin={onAddAdmin} setUser = {setUser} mStores={mStores} admins={admins} onDeleteAdmin={onDeleteAdmin} onAddStore={onAddStore} />\n    </div>\n  );\n}\n\nexport default MerchantPage;\n","import React from 'react';\nimport { useState, useCallback } from \"react\";\nimport { Route, Routes } from \"react-router\";\nimport MerchantPage from \"./pages/MerchantPage\";\n//import StorePage from \"./pages/StorePage\";\n\nfunction Merchant({user, setUser,setAdminUser}) {\n    const [admins, setAdmins] = useState([]);\n    //mStores meaning merchant stores\n    const [mStores, setmStores] = useState([]);\n  \n    const getAdmins = useCallback((admins) => {\n      setAdmins(admins);\n    }, []);\n\n  \n    const getmStores = useCallback((mStores) => {\n      setmStores(mStores);\n    }, []);\n  \n    function onAddAdmin(newAdmin) {\n      setAdmins([...admins, newAdmin]);\n    }\n    function onAddStore(newStore) {\n      setmStores([...mStores, newStore]);\n    }\n    function onDeleteAdmin(deletedAdmin){\n      const newAdmins = admins.filter(admin=> admin.id!== deletedAdmin.id);\n      setAdmins(newAdmins)\n    }\n  \n    return (\n        <div>\n        <Routes>\n        <Route exact path=\"/\" element={<MerchantPage setAdminUser={setAdminUser} user= {user} setUser= {setUser} admins={admins} onDeleteAdmin={onDeleteAdmin} getAdmins={getAdmins} mStores={mStores} getmStores={getmStores} onAddAdmin={onAddAdmin} onAddStore={onAddStore}/>}></Route>\n        {/*<Route exact path=\"/storepage/:storeId\" element={<StorePage />}></Route>*/}\n        </Routes>\n        </div>\n    );\n}\n\nexport default Merchant;","import React, { useState, useEffect } from \"react\";\n\nfunction ProductsTable({ storeId }) {\n  console.log(storeId);\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    fetch(`/stores/${storeId}`).then((r) => {\n      if (r.ok) {\n        r.json().then((data) => setProducts(data.items));\n      }\n    });\n  }, [storeId]);\n\n  console.log(products);\n\n  //design table\n  return (\n    <div>\n      <div className=\"ptable-container\">\n        <p >Paid and non-paid products</p>\n        <table className=\"stable\">\n          <thead>\n            <tr>\n              <th>Item Name</th>\n              <th>Quantity</th>\n              <th>Payment Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            {products.map((product) => {\n              return (\n                <tr key={product.id}>\n                  <td>{product.name}</td>\n                  <td>{product.quantity}</td>\n                  <td>not paid</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default ProductsTable;\n","import React, { useState, useEffect } from \"react\";\n\nfunction AdminDetails({ storeId }) {\n  const [adminName, setAdminName] = useState();\n  const [clerks, setClerks] = useState([]);\n\n  useEffect(() => {\n    fetch(`/stores/${storeId}`).then((r) => {\n      if (r.ok) {\n        r.json().then((data) => {\n          setAdminName(data.admin.full_name);\n          setClerks(data.clerks);\n        });\n      }\n    });\n  }, [storeId]);\n  console.log(adminName);\n  console.log(clerks);\n\n  return (\n    <div>\n      <h3>Store Admin: {adminName}</h3>\n      <div className=\"mtable-container\">\n        <p>Store clerks</p>\n        <table className=\"stable\">\n          <thead>\n            <tr>\n              <th>Clerk Name</th>\n              <th>Email</th>\n            </tr>\n          </thead>\n          <tbody>\n            {clerks.map((clerk) => {\n              return (\n                <tr key={clerk.id}>\n                  <td>{clerk.full_name}</td>\n                  <td>{clerk.email}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default AdminDetails;\n","import {useState,useEffect} from \"react\"\nimport React, { PureComponent } from 'react';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\n\n\nexport default function Bargraph (storeId) {\n  const[data,setData]=useState([])\n \n  useEffect(() => {\n    fetch(`/stores/${storeId.storeId}/items`).then((r) => {\n      if (r.ok) {\n        r.json().then((data) => setData(data));\n      }\n      else\n      console.log(\"NO RECORDS FOUND!\")\n      console.log(storeId)\n    });\n  },[]);\n\n    return ( \n\n      <div className=\"bargraph\">\n         <div className=\"minibar-title-wrapper\">\n           <h4 className=\"minibar-title\">sale statistics</h4>\n         </div>\n        <ResponsiveContainer width=\"100%\" aspect={3}>\n          <BarChart\n            width={500}\n            height={300}\n            data={data}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5,\n            }}\n          >\n            {/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n              {/* <Bar dataKey=\"quantity\" fill=\"#e60000\" />\n              <Bar dataKey=\"inStock\" fill=\"#f76700\" />\n              <Bar dataKey=\"spoilt\" fill=\"#f7bc00\" /> */}\n              <Bar dataKey=\"BuyingPrice\" fill=\"#5546cc\" />\n              <Bar dataKey=\"SellingPrice\" fill=\"#009e3b\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    );\n}\n","// import \"./st.css\";\nimport {useState,useEffect} from \"react\"\nimport React from \"react\";\nimport { PieChart, Pie, Cell,ResponsiveContainer } from \"recharts\";\n\n\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n\nexport default function Piechart(storeId) {\n  const[data,setData]=useState([])\n  console.log(data)\n \n  useEffect(() => {\n    fetch(`/stores/${storeId.storeId}/items`).then((r) => {\n      if (r.ok) {\n        r.json().then((data) => setData(data));\n      }\n      else\n      console.log(\"NO RECORDS FOUND!\")\n      console.log(storeId)\n    });\n  },[]);\n\n\n\n// label on individual chart\n  return (\n    \n    \n    <ResponsiveContainer  className=\"pie\">\n      <PieChart className=\"pie-chart\"  >\n      \n  \n        <Pie\n          label={({\n            cx,\n            cy,\n            midAngle,\n            innerRadius,\n            outerRadius,\n            value,\n            index\n          }) => {\n            console.log(\"handling label?\");\n            const RADIAN = Math.PI / 180;\n            // eslint-disable-next-line\n            const radius = 25 + innerRadius + (outerRadius - innerRadius);\n            // eslint-disable-next-line\n            const x = cx + radius * Math.cos(-midAngle * RADIAN);\n            // eslint-disable-next-line\n            const y = cy + radius * Math.sin(-midAngle * RADIAN);\n            return (\n              <text\n              \n                \n                x={x}\n                y={y}\n                fill=\"#000\"\n                textAnchor={x > cx ? \"start\" : \"end\"}\n                dominantBaseline=\"central\"\n              >\n                {/* {data[index].name} ({value}) */}\n                {data[index].name}({value})\n                \n              </text>\n            );\n          }}\n          // end\n          // the  actual piechart\n          data={data}\n          cx={130}\n          cy={150}\n      \n          labelLine={true}\n      \n          innerRadius={40}\n          outerRadius={60}\n          fill=\"#8884d8\"\n          paddingAngle={5}\n          dataKey=\"quantity\"\n      \n        >\n      \n          {data.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n      \n      </PieChart>\n      </ResponsiveContainer> \n\n  );\n}\n","import React from 'react';\nimport Bargraph from '../pages/Bargraph';\nimport Piechart from '../pages/Piechart';\n// import Linegraph from '../pages/Linegraph';\n\nfunction StoreChart({storeId}) {\n    return (\n        <>\n        <div className='charts'>\n           \n            <div className=\"main-chart\">\n                <Bargraph storeId={storeId}/>\n            </div>\n            <div className=\"secondary-chart\">\n                <Piechart storeId={storeId}/>\n            </div>\n        </div>\n            \n        </>\n    );\n}\n\nexport default StoreChart;","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ProductTable from \"../components/ProductsTable\";\nimport NavBar from \"../components/NavBar\";\nimport AdminDetails from \"../components/AdminDetails\";\nimport StoreChart from \"../components/StoreChart\";\n// import SideBar from \"../components/SideBar\";\n\nfunction StorePage() {\n  const params = useParams();\n  const storeId = params.storeId;\n  console.log(storeId);\n  console.log(params)\n\n  const [mStore, setmStore] = useState({});\n  //gets specific store using id\n  useEffect(() => {\n    fetch(`/stores/${storeId}`)\n      .then((r) => r.json())\n      .then((data) => {\n        setmStore(data);\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n  },[]);\n\n  console.log(mStore);\n\n  return (\n    <div className=\"store-page\">\n      <NavBar />\n      <h3 className=\"bar-title\">Store {mStore.store_name} Summary Report</h3>\n      <StoreChart storeId={storeId}/>\n      <AdminDetails storeId={storeId}/>\n      <ProductTable storeId={storeId} />\n      \n    </div>\n  );\n}\n\nexport default StorePage;\n","import React from \"react\";\n\nconst ReadOnlyRow = ({ items, handleEditClick, handleDeleteClick }) => {\n  return (\n    <tr>\n              <td>{items.name}</td>\n              <td>{items.quantity}</td>\n              <td>{items.inStock}</td>\n              <td>{items.spoilt}</td>\n              <td>{items.BuyingPrice}</td>\n              <td>{items.SellingPrice}</td>\n      <td>\n        <button\n          type=\"button\"\n          className=\"read-btn\"\n          onClick={(event) => handleEditClick(event, items)}\n        >\n          Edit\n        </button>\n        <button className=\"delete-btn\" type=\"button\" onClick={() => handleDeleteClick(items.id)}>\n          Delete\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default ReadOnlyRow;\n","import React from \"react\";\n\nconst EditableRow = ({\n  editFormData,\n  handleEditFormChange,\n  handleCancelClick,\n}) => {\n  return (\n    <tr>\n      <td>\n        <input\n          type=\"text\"\n          required=\"required\"\n          placeholder=\"Enter item name...\"\n          name=\"name\"\n          value={editFormData.name}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <input\n          type=\"number\"\n          required=\"required\"\n          placeholder=\"Quantity.\"\n          name=\"quantity\"\n          value={editFormData.quantity}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <input\n          type=\"number\"\n          required=\"required\"\n          placeholder=\"inStock\"\n          name=\"inStock\"\n          value={editFormData.inStock}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <input\n          type=\"spoilt\"\n          required=\"required\"\n          placeholder=\"spoilt.\"\n          name=\"spoilt\"\n          value={editFormData.spoilt}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <input\n          type=\"buyingPrice\"\n          required=\"required\"\n          placeholder=\"buyingPrice.\"\n          name=\"buyingPrice\"\n          value={editFormData.buyingPrice}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <input\n          type=\"sellingPrice\"\n          required=\"required\"\n          placeholder=\"sellingPrice.\"\n          name=\"sellingPrice\"\n          value={editFormData.sellingPrice}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <button className=\"save-btn\" type=\"submit\">Save</button>\n        <button className=\"cancel-btn\" type=\"button\" onClick={handleCancelClick}>\n          Cancel\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default EditableRow;\n","import React from 'react';\n// import * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport * as IoIcons from 'react-icons/io';\n\nexport const SidebarData = [\n    {\n        title: 'Dashboard',\n       \n        icon: < AiIcons.AiOutlineDashboard / > ,\n        cName: 'nav-text'\n    },\n    {\n        title: 'Add items+',\n        path: '/addItems',\n        icon: < IoIcons.IoIosPaper / > ,\n        cName: 'nav-text'\n    },\n    {\n        title: 'Request Items+',\n        path: '/addRequests',\n        icon: < IoIcons.IoIosPaper / > ,\n        cName: 'nav-text'\n    },\n\n    {/* {\n        title: 'Inventory',\n        path: '/oldPage',\n        icon: < FaIcons.FaCartPlus / > ,\n        cName: 'nav-text'\n    } */}\n];","import React, { useState } from 'react';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { SidebarData } from './SidebarData';\nimport './Navbar.css';\nimport { IconContext } from 'react-icons';\n\nfunction Navbar({setClerkuser}) {\n  const [sidebar, setSidebar] = useState(false);\n\n  const showSidebar = () => setSidebar(!sidebar);\n  const navigate = useNavigate();\n\n  function handleLogoutClick() {\n    fetch(\"clerk/logout\", { method: \"DELETE\" }).then((r) => {\n      if (r.ok) {\n        setClerkuser(null);\n        navigate(\"/clog-in\")\n      }\n    });\n  }\n\n  return (\n    <>\n    \n      <IconContext.Provider value={{ color: '#fff' }}>\n        \n        <div className='navbar'>\n          <Link to='#' className='menu-bars'>\n            <FaIcons.FaBars onClick={showSidebar} />\n          </Link>\n        <div className=\"title-wrapper\">\n          <h3 className='clerk-title'>Clerk Page</h3>\n        </div>\n        </div>\n        <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\n          <ul className='nav-menu-items' onClick={showSidebar}>\n            <li className='navbar-toggle'>\n              <Link to='#' className='menu-bars'>\n                <AiIcons.AiOutlineClose />\n              </Link>\n            </li>\n            {SidebarData.map((item, index) => {\n              return (\n               \n                <li key={index} className={item.cName}>\n                  <Link to={item.path}>\n                    <div className='icon'>{item.icon}</div>\n                    <span>{item.title}</span>\n                  </Link>\n                </li>\n               \n              );\n            })}\n            <li><button onClick={handleLogoutClick}  className='nav-btn'>log out</button></li>\n            \n            \n          </ul>\n          \n        </nav>\n      </IconContext.Provider>\n    </>\n  );\n}\n\nexport default Navbar;\n","import React, { useState, Fragment, useEffect } from \"react\";\nimport \"../../../App.css\";\nimport { nanoid } from \"nanoid\";\nimport data from \"./mock-data.json\";\nimport ReadOnlyRow from \"./ReadOnlyRow\";\nimport EditableRow from \"./EditableRow\";\nimport ClerkNavBar from '../ClerkNavbar/Navbar'\n\n\nconst Table = ({setClerkUser}) => {\n \n  //<<<<-----table functions---->>>\n  const [items, setItems] = useState(data);\n  const [clerkId,setClerkId]= useState(localStorage.getItem('clerkId'));\n  console.log(clerkId)\n\n\n  //populating the table with data from database\n  useEffect(() => {\n    fetch(`/clerks/${clerkId}`).then((r) => {\n      if (r.ok) {\n        r.json().then((data) => {\n          console.log(data.items)\n          setItems(data.items)\n        }\n        \n        );\n      }\n      else\n      console.log(\"NO RECORDS FOUND!\")\n    });\n  },[]);\n\n\n  const [addFormData, setAddFormData] = useState({\n    name: \"\",\n    quantity: \"\",\n    inStock: \"\",\n    spoilt: \"\",\n    BuyingPrice: \"\",\n    SellingPrice: \"\",\n    status:\"\",\n    clerk_id:clerkId\n  });\n  \n\n\n  const [editFormData, setEditFormData] = useState({\n    name: \"\",\n    quantity: \"\",\n    inStock: \"\",\n    spoilt: \"\",\n    BuyingPrice: \"\",\n    SellingPrice: \"\"\n  });\n\n\n\n  const [editItemId, setEditContactId] = useState(null);\n\n  const handleAddFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...addFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setAddFormData(newFormData);\n  };\n\n  const handleEditFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...editFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setEditFormData(newFormData);\n  };\n\n  const handleAddFormSubmit = (event) => {\n    //----POST---->>>>\n    event.preventDefault();\n\n    const newItem = {\n      id: nanoid(),\n      name: addFormData.name,\n      quantity: addFormData.quantity,\n      inStock: addFormData.inStock,\n      spoilt: addFormData.spoilt,\n      BuyingPrice: addFormData.buyingPrice,\n      SellingPrice: addFormData.sellingPrice,\n      clerk_id: addFormData.clerk_id,\n      paid:false\n    };\n    const newItems = [...items, newItem];\n    // POSTING TO DATABASE\n\n  fetch(\"/items\", {\n    method: \"POST\",\n    headers: {\n    \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(newItem),   \n  })\n    .then((r) => r.json())\n    .then((newItem) => {\n      console.log(newItem);\n    });\n    setItems(newItems);\n  };\n\n  // <<<<<<<-------->>>>>>>\n\n  const handleEditFormSubmit = (event) => {\n    event.preventDefault();\n\n    const editedItem = {\n      id: editItemId,\n      name: editFormData.name,\n      quantity: editFormData.quantity,\n      inStock: editFormData.inStock,\n      spoilt: editFormData.spoilt,\n      BuyingPrice: editFormData.buyingPrice,\n      SellingPrice: editFormData.sellingPrice\n    };\n\n    const newItems = [...items];\n\n    const index = items.findIndex((item) => item.id === editItemId);\n\n    newItems[index] = editedItem;\n\n        //posting edited items to the db\n\n  fetch(`/items/${editItemId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({editedItem}),\n    })\n      .then((r) => r.json())\n      .then((data)=>console.log(data))\n\n    setItems(newItems);\n    console.log(newItems)\n    setEditContactId(null);\n  };\n\n\n\n  const handleEditClick = (event, item) => {\n    event.preventDefault();\n    setEditContactId(item.id);\n\n    const formValues = {\n      name: item.name,\n      quantity: item.quantity,\n      inStock: item.inStock,\n      spoilt: item.spoilt,\n      BuyingPrice: item.buyingPrice,\n      SellingPrice: item.sellingPrice\n    };\n\n\n\n    setEditFormData(formValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditContactId(null);\n  };\n\n\n\n  const handleDeleteClick = (contactId) => {\n    const newItems = [...items];\n    const index = items.findIndex((item) => item.id === contactId);\n    newItems.splice(index, 1);\n\n    fetch(`/items/${contactId}`, {\n      method: \"DELETE\",\n    }).then((r) => {\n      if (r.ok) {\n        // setRequest(spice);\n      }\n    });\n\n    setItems(newItems);\n  };\n  //<<<<<------end of table- functions------>>>>\n\n  return (\n\n<>\n    <ClerkNavBar setClerkuser={setClerkUser}/>\n    <div className=\"app-container\">\n     \n            {/* //<<<<--- table input form-->> */}\n          <div className=\"table-title\">\n            <h2>Add items</h2>\n          </div>\n          <form className=\"items-form\" onSubmit={handleAddFormSubmit}>\n            <input\n              type=\"text\"\n              name=\"name\"\n              required=\"required\"\n              placeholder=\"Enter a name...\"\n              onChange={handleAddFormChange}\n            />\n            <input\n              type=\"number\"\n              name=\"quantity\"\n              required=\"required\"\n              placeholder=\"Quantity\"\n              onChange={handleAddFormChange}\n            />\n            <input\n              type=\"number\"\n              name=\"inStock\"\n              required=\"required\"\n              placeholder=\"available.\"\n              onChange={handleAddFormChange}\n            />\n            <input\n              type=\"number\"\n              name=\"spoilt\"\n              required=\"required\"\n              placeholder=\" spoilt items...\"\n              onChange={handleAddFormChange}\n            />\n              <input\n              type=\"number\"\n              name=\"buyingPrice\"\n              required=\"required\"\n              placeholder=\"Buying Price\"\n              onChange={handleAddFormChange}\n            />\n               <input\n              type=\"number\"\n              name=\"sellingPrice\"\n              required=\"required\"\n              placeholder=\"Selling Price\"\n              onChange={handleAddFormChange}\n            />\n            <button className=\"one-btn\"  type=\"submit\">Add</button>\n          </form>\n          {/* end of table input form*/}\n\n     {/* <<<--------------------->>>>> */}\n\n                  {/* actual table */}\n      <form className=\"actual-table\" onSubmit={handleEditFormSubmit}>\n        <table className=\"actual-table\">\n          <thead>\n            <tr>\n            <th> Name</th>\n            <th>Quantity</th>\n            <th>inStock</th>\n            <th>spoilt</th>\n            <th>BuyingPrice</th>\n            <th>SellingPrice</th>\n            <th>Edit / Delete</th>\n            </tr>\n          </thead>\n          <tbody>\n            {items.map((item) => (\n              <Fragment>\n                {editItemId === item.id ? (\n                  <EditableRow\n                    editFormData={editFormData}\n                    handleEditFormChange={handleEditFormChange}\n                    handleCancelClick={handleCancelClick}\n                  />\n                ) : (\n                  <ReadOnlyRow\n                    items={item}\n                    handleEditClick={handleEditClick}\n                    handleDeleteClick={handleDeleteClick}\n                  />\n                )}\n              </Fragment>\n            ))}\n          </tbody>\n        </table>\n      </form>\n\n      {/* end of table  */}\n\n    </div>\n    </>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\n\nconst ReadOnlyRow = ({ items, handleEditClick, handleDeleteClick }) => {\n  return (\n    <tr>\n              <td>{items.clerk_name}</td>\n              <td>{items.item_name}</td>\n              <td>{items.quantity}</td>\n              <td>{items.date}</td>\n      <td>\n        <button\n          type=\"button\"\n          className=\"read-btn\"\n          onClick={(event) => handleEditClick(event, items)}\n        >\n          Edit\n        </button>\n        <button className=\"delete-btn\" type=\"button\" onClick={() => handleDeleteClick(items.id)}>\n          Delete\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default ReadOnlyRow;\n","import React from \"react\";\n\nconst EditableRow = ({\n  editFormData,\n  handleEditFormChange,\n  handleCancelClick,\n}) => {\n  return (\n    <tr>\n      <td>\n        <input\n          type=\"text\"\n          required=\"required\"\n          placeholder=\"Clerk name...\"\n          name=\"clerk_name\"\n          value={editFormData.name}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          required=\"required\"\n          placeholder=\"Item name.\"\n          name=\"item_name\"\n          value={editFormData.item}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <input\n          type=\"number\"\n          required=\"required\"\n          placeholder=\"Quantity\"\n          name=\"quantity\"\n          value={editFormData.quantity}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <input\n          type=\"date\"\n          required=\"required\"\n          placeholder=\"due date.\"\n          name=\"date\"\n          value={editFormData.date}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <button className=\"save-btn\" type=\"submit\">Save</button>\n        <button className=\"cancel-btn\" type=\"button\" onClick={handleCancelClick}>\n          Cancel\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default EditableRow;\n","import React, { useState, useEffect, Fragment } from \"react\";\n\nimport { nanoid } from \"nanoid\";\nimport \"../../../App.css\";\nimport data from \"./mock-data.json\";\nimport ReadOnlyRow from \"./ReadOnlyRow\";\nimport EditableRow from \"./EditableRow\";\nimport ClerkNavbar from '../ClerkNavbar/Navbar';\nimport { useNavigate } from \"react-router-dom\";\n\nfunction RequestTable() {\n\n\n  //<<<<-----table functions---->>>\n  \n  const [request, setRequest] = useState(data);\n  const [clerkId,setClerkId]= useState(localStorage.getItem('clerkId'));\n \n\n  //populating the table with data from database\n    useEffect(() => {\n      fetch(`/clerks/${clerkId}`).then((r) => {\n        if (r.ok) {\n          r.json().then((data) => setRequest(data.requested_items));\n          \n        }\n      });\n    },[]);\n    //end\n\n  const [addFormData, setAddFormData] = useState({\n    clerk_name: \"\",\n    item_name: \"\",\n    quantity: \"\",\n    date: \"\",\n    clerk_id: clerkId\n\n  });\n\n\n\n  const [editFormData, setEditFormData] = useState({\n    clerk_name: \"\",\n    item_name:\"\",\n    quantity: \"\",\n    date: \"\",\n  });\n\n\n  const [editItemId, setEditContactId] = useState(null);\n\n  const handleAddFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...addFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setAddFormData(newFormData);\n  };\n\n\n\n  const handleEditFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...editFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setEditFormData(newFormData);\n  };\n\n  const handleAddFormSubmit = (event) => {\n    event.preventDefault();\n\n    const newItem = {\n      id: nanoid(),\n      clerk_name: addFormData.clerk_name,\n      item_name: addFormData.item_name,\n      quantity: addFormData.quantity,\n      date: addFormData.date,\n      clerk_id: addFormData.clerk_id\n    };\n\n    const newItems = [...request, newItem];\n\n    //POSTING TO THE DATABASE\n\n    fetch(\"/requested_items\", {\n      method: \"POST\",\n      headers: {\n      \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newItem),   \n    })\n      .then((r) => r.json())\n      .then((newItem) => {\n        console.log(newItem);\n      });\n\n    setRequest(newItems);\n  };\n\n\n  const handleEditFormSubmit = (event) => {\n    event.preventDefault();\n\n    const editedItem = {\n      id: editItemId,\n      clerk_name: editFormData.clerk_name,\n      item_name: editFormData.item_name,\n      quantity: editFormData.quantity,\n      date: editFormData.date\n    };\n\n    const newItems = [...request];\n\n    const index = request.findIndex((item) => item.id === editItemId);\n\n    newItems[index] = editedItem;\n\n    //posting edited items to the db\n\n    // fetch(`/requested_items/${editItemId}`, {\n    //   method: \"PATCH\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify({editedItem}),\n    // })\n    //   .then((r) => r.json())\n    //   .then((data)=>console.log(data))\n\n    setRequest(newItems);\n    console.log(newItems)\n    setEditContactId(null);\n  };\n\n  const handleEditClick = (event, item) => {\n    event.preventDefault();\n    setEditContactId(item.id);\n\n    const formValues = {\n      clerk_name: item.clerk_name,\n      item_name: item.item_name,\n      quantity: item.quantity,\n      date: item.date,\n    };\n\n    setEditFormData(formValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditContactId(null);\n  };\n\n  const handleDeleteClick = (contactId) => {\n    const newItems = [...request];\n    const index = request.findIndex((item) => item.id === contactId);\n    newItems.splice(index, 1);\n\n    // console.log(contactId)\n\n    fetch(`/requested_items/${contactId}`, {\n      method: \"DELETE\",\n    }).then((r) => {\n      if (r.ok) {\n        // setRequest(spice);\n      }\n    });\n\n    setRequest(newItems);\n  };\n  //<<<<<------end of table- functions------>>>>\n\n  return (\n<>\n    <ClerkNavbar/>\n   \n    <div className=\"app-container\">\n     \n      <div className=\"table-title\">\n        <h2>Request Items</h2>\n      </div>\n\n      {/* //<<<<--- table form input-->> */}\n\n    <form  className=\"items-form\" onSubmit={handleAddFormSubmit}>\n      <input\n        type=\"text\"\n        name=\"clerk_name\"\n        required=\"required\"\n        placeholder=\"Enter Clerk Name...\"\n        onChange={handleAddFormChange}\n      />\n        <input\n          type=\"text\"\n          name=\"item_name\"\n          required=\"required\"\n          placeholder=\"item name.\"\n          onChange={handleAddFormChange}\n        />\n      <input\n        type=\"number\"\n        name=\"quantity\"\n        required=\"required\"\n        placeholder=\"Quantity\"\n        onChange={handleAddFormChange}\n      />\n      <input\n        type=\"date\"\n        name=\"date\"\n        required=\"required\"\n        placeholder=\" Due Date...\"\n        onChange={handleAddFormChange}\n      />\n            <button className=\"one-btn\" type=\"submit\">Add+</button>\n\n    </form>\n                {/* end of table form input */}\n\n      <form className=\"actual-table\" onSubmit={handleEditFormSubmit}>\n        <table>\n          <thead>\n            <tr>\n            <th>Clerk Name</th>\n            <th>Item Name</th>\n            <th>Quantity</th>\n            <th>Date</th>\n            <th>Edit / Delete</th>\n            </tr>\n          </thead>\n          <tbody>\n            {request.map((itemx) => (\n              <Fragment>\n                {editItemId === itemx.id ? (\n                  <EditableRow\n                    editFormData={editFormData}\n                    handleEditFormChange={handleEditFormChange}\n                    handleCancelClick={handleCancelClick}\n                  />\n                ) : (\n                  <ReadOnlyRow\n                  items={itemx}\n                    handleEditClick={handleEditClick}\n                    handleDeleteClick={handleDeleteClick}\n                  />\n                )}\n              </Fragment>\n            ))}\n          </tbody>\n        </table>\n      </form>\n\n    </div>\n    </>\n  );\n};\n\n\nexport default RequestTable","import React from 'react'\nimport \"../../App.css\"\n// import Navbar from './Navbar/Navbar';\nimport {useState} from \"react\"\nimport Table from \"./ItemsTables/Table\"\nimport RequestTable from './RequestItemTable.js/RequestTable';\n\n\n\n\nfunction ClerkPage() {\n  // const[items,setItems]=useState(initialState)\n  const[isTrue,setIsTrue]=useState(true)\n  const[request,setRequest]=useState(null)\n\n\n\n  function handleClick(){\n    setRequest(null)\n    setIsTrue(!isTrue)\n  }\n  function handleRequest(){\n    setIsTrue(null)\n    setRequest(!request)\n  }\n\n  return (\n        <div className=\"clerk\">\n          <div className=\"clerk-banner\"><h1 className='clerk-title'>Clerk Page</h1></div>\n                <div class=\"clerk-container\">\n          <div class=\"clerk-navbar\">\n            <button className=\"add-btn\" onClick={handleClick}> Add Items+</button>\n            <button className=\"add-btn\" onClick={handleRequest}> Request Items+</button>\n            <button className=\"add-btn\"> Logout</button>\n            </div>\n          {isTrue ?<Table/> :null}\n          {request ? <RequestTable/>:null}\n            </div>\n          </div>\n  )\n}\n\nexport default ClerkPage","\nimport React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst MainBar = () => {\n  return (\n    <header className='header'>\n      <div>\n        <Link className='links2' to='/'>\n          LocalShop\n        </Link>\n      </div>\n\n      <nav className='navbar'>\n        <ul>\n        <Link className='links' to='/mlog-in'>\n                Merchant\n        </Link>\n       <Link className='links' to='/alog-in'>\n                 Admin\n         </Link>\n         \n          <Link  className='links' to='/clog-in'>\n                Clerk\n         </Link>\n        </ul>\n      </nav>\n    </header>\n  )\n}\n\nexport default MainBar\n","import React from 'react'\nimport \"./Footer.css\"\n\n\nconst Footer = () => {\n  return (\n    <>\n\n    <div class=\"footer-wrap\">\n      <div className='footer-container'>\n        <h3>Social Media</h3>\n        <ul>\n          <li>Facebook</li>\n          <li>Twitter</li>\n          <li>Instagram</li>\n          <li>Linkedin</li>\n        </ul>\n      </div>\n\n      <div className='footer-container'>\n      <h3>Quick links</h3>\n        <ul>\n          <li>Home</li>\n          <li>Why Us</li>\n          <li>Comments</li>\n          <li>Feedback</li>\n        </ul>\n      </div>\n\n      <div className='footer-container'>\n        <h3>Talk to us</h3>\n        <ul>\n          <li>tel:+254798883985</li>\n          <li>email:localshop@gmail.com</li>\n          <li>twitter@localshop</li>\n          <li>careers</li>\n        </ul>\n      </div>\n    </div>\n    <div className='legal'>\n      <p>LocalShop © 2022 All Rights Reserved.</p>\n        </div>\n  </>\n  )\n}\n\nexport default Footer\n","import React, { useState }from 'react'\nimport { Link } from \"react-router-dom\"\nimport { useNavigate } from 'react-router';\nimport MainBar from '../../MainBar/MainBar';\nimport Footer from '../../footer/Footer';\n\nconst MerchantLogIn = ({setUser}) => {\n  const[email, setEmail] = useState(\"\");\n  const[password, setPassword] = useState(\"\");\n  const navigate =useNavigate()\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    \n    fetch (\"/auth/login\",{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    })\n    .then((r)=>{\n      return r.json()\n    })\n    .then((data) =>{\n      if(data.error){\n        alert(data.error)\n      }else{\n        console.log(data)\n        setUser(data)\n        localStorage.setItem(\"userId\", data.id)\n        navigate('/merchant')\n      }\n     \n\n    })\n      \n  }\n\n\n  return (\n    <>\n    <MainBar/>\n      <section className='showcase login'>\n        <div className='showcase-overlay'>\n          <form className='formation-control' onSubmit={handleSubmit}>\n          <input type=\"email\"\n                placeholder='email'\n                autoComplete=\"off\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n          />\n           <input type=\"password\"\n                autoComplete=\"current-password\"\n                value={password}\n                placeholder='password'\n                onChange={(e) => setPassword(e.target.value)} \n          />\n           <p className=\"signup-link\"> Don't have account? <Link className='linkp'  to='/register'> Become a Member!</Link></p>\n            <button  type='submit'>Log In</button>\n          </form>\n        </div>\n      </section>\n      <Footer/>\n    </>\n  )\n}\n\nexport default MerchantLogIn","import React, { useState }from 'react'\nimport { useNavigate } from 'react-router';\nimport Footer from '../../footer/Footer';\nimport MainBar from '../../MainBar/MainBar';\n\nconst AdminLogin= ({adminUser,setAdminUser}) => {\n\n  const[email, setEmail] = useState(\"\");\n  const[password, setPassword] = useState(\"\");\n  \n\n  const navigate =useNavigate()\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    \n    \n   fetch (\"admin/login\",{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    })\n    .then((r)=>{\n      return r.json()\n    })\n    .then((data) =>{\n      if(data.error){\n        alert(data.error)\n      }else\n      {\n        console.log(data)\n    setAdminUser(data)\n    localStorage.setItem(\"adminId\", data.id)\n        navigate('/inventories')\n      }\n    })\n  }\n\n\n  return (\n    <>\n    <MainBar/>\n      <section className='showcase login'>\n        <div className='showcase-overlay'>\n          <form className='formation-control' onSubmit={handleSubmit}>\n          <input type=\"email\"\n                id=\"email\"\n                placeholder='email'\n                autoComplete=\"off\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n          />\n           <input type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={password}\n                placeholder='password'\n                onChange={(e) => setPassword(e.target.value)} \n          />\n          \n            <button  type='submit'>Log In</button>\n          </form>\n        </div>\n      </section>\n  <Footer/>\n    </>\n  )\n}\n\n\nexport default AdminLogin","import React, { useState }from 'react'\nimport { useNavigate } from 'react-router';\nimport Footer from '../../footer/Footer';\nimport MainBar from '../../MainBar/MainBar';\n\nconst ClerkLogin = ({setClerkUser}) => {\n\n  \n\n  const[email, setEmail] = useState(\"\");\n  const[password, setPassword] = useState(\"\");\n\n  const navigate=useNavigate()\n  \n\n  function handleSubmit(e) {\n    e.preventDefault();\n    \n    fetch (\"/clerk/login\",{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    }).then((r)=>{\n      return r.json()\n    })\n    .then((data) =>{\n      if(data.error){\n        alert(data.error)\n      }else\n      {\n        console.log(data)\n        setClerkUser(data)\n        localStorage.setItem(\"clerkId\", data.id)\n        navigate('/clerk')\n      }\n    })\n  }\n\n  return (\n    <>\n    <MainBar/>\n      <section className='showcase login'>\n        <div className='showcase-overlay'>\n          <form className='formation-control' onSubmit={handleSubmit}>\n          <input type=\"text\"\n                id=\"username\"\n                placeholder='email'\n                autoComplete=\"off\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n          />\n           <input type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={password}\n                placeholder='password'\n                onChange={(e) => setPassword(e.target.value)} \n          />\n          \n            <button type='submit'>Log In</button>\n          </form>\n        </div>\n      </section>\n      <Footer/>\n    </>\n  )\n}\n\nexport default ClerkLogin\n","import React, {useState} from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport Footer from '../footer/Footer';\nimport MainBar from '../MainBar/MainBar';\n\nconst Register = ({ setUser }) => {\n\n    const[full_name, setFullName] = useState(\"\");\n    const[email, setEmail] = useState(\"\");\n    const[password, setPassword] = useState(\"\");  \n    const[password_confirmation, setPasswordConfirmation] = useState(\"\");\n    const[role, setRole] = useState(\"\")\n \n    const navigate = useNavigate();\n\n\n    function handleSubmit(e) {\n      e.preventDefault()\n      \n      fetch(\"/signup\", {\n          method: \"POST\",\n          headers: {\n              \"Content-Type\": \"application/json\"\n          }, \n          body: JSON.stringify({\n            full_name:full_name,\n            email:email,\n            password:password,\n            password_confirmation:password_confirmation,\n            role:role\n          }),\n      })\n       .then((r) => {\n        console.log(r)\n         if (r.ok) {\n           r.json().then((user) => {\n            console.log(user)\n            setUser(user)\n            navigate(\"/mlog-in\")\n           }\n          \n           \n           );\n         } \n        });\n    \n    }\n  return (\n    <>\n    <MainBar/>\n      <section className='showcase login'>\n        <div className='showcase-overlay'>\n          <form className='formation-control' onSubmit={handleSubmit}>\n            <input type='text' name='full_name' placeholder='Full name' value={full_name} required id=\"fullname\" onChange={(e) => setFullName(e.target.value)} />\n            \n            <input type='email' name='email' placeholder='Email' value={email} required id=\"email\" onChange={(e) => setEmail(e.target.value)} />\n            \n            <input type='password' name='password' placeholder='Password' value={password} required id=\"password\" onChange={(e) => setPassword(e.target.value)} />\n            \n            <input type='password' name='password' placeholder='Password Confirmation' value={password_confirmation} required id=\"passswordconfirmation\" onChange={(e) => setPasswordConfirmation(e.target.value)} />\n            \n              <input type='text' name='role' placeholder='Role'value={role}  onChange={(e) => setRole(e.target.value)} />\n            <button type='submit'>Create Your Account</button>\n          </form>\n        </div>\n      </section>\n      <Footer/>\n    </>\n  )\n}\n\nexport default Register","import React from 'react'\nimport Drawer  from '@mui/material/Drawer';\nimport Typography from '@mui/material/Typography';\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport { ListItemIcon } from '@mui/material';\nimport AccountCircleOutlinedIcon from '@mui/icons-material/AccountCircleOutlined';\nimport SpeedOutlinedIcon from '@mui/icons-material/SpeedOutlined';\nimport PowerSettingsNewOutlinedIcon from '@mui/icons-material/PowerSettingsNewOutlined';\nimport PeopleAltOutlinedIcon from '@mui/icons-material/PeopleAltOutlined';\nimport ShoppingCartCheckoutOutlinedIcon from '@mui/icons-material/ShoppingCartCheckoutOutlined';\nimport Inventory2OutlinedIcon from '@mui/icons-material/Inventory2Outlined';\nimport TimelineOutlinedIcon from '@mui/icons-material/TimelineOutlined';\nimport { useNavigate } from 'react-router-dom';\n// import Inventory from '../inventory/Inventory';\n\n\nconst SideBar = ({children, setAdminuser}) => {\n\n    let navigate = useNavigate();\n\n    const drawerWidth = 240\n    const sidebarItems=[\n       \n        {\n          text: \"Inventory\",\n          icon: <Inventory2OutlinedIcon color=\"#ffff\"/>,\n          path: '/inventories'\n        },\n        {\n            text: \"Order Requests\",\n            icon: <ShoppingCartCheckoutOutlinedIcon color=\"#ffff\"/>,\n            path: '/orders'\n          },\n        {\n          text: \"Analytics\",\n          icon: <TimelineOutlinedIcon color=\"#ffff\"/>,\n          path: '/analytics'\n        },\n        {\n            text: \"Clerks\",\n            icon: <PeopleAltOutlinedIcon color=\"#ffff\"/>,\n            path: '/clerks'\n          }\n       \n      ]\n\n\n\n      //logout button\n\n      function handleLogoutClick() {\n    fetch(\"admin/logout\", { method: \"DELETE\" }).then((r) => {\n      if (r.ok) {\n        setAdminuser(null);\n        navigate(\"/alog-in\")\n      }\n    });\n\n\n  }\n  return (\n      <div>\n          <Drawer\n              sx={{\n                  width: drawerWidth,\n                  flexShrink: 0,\n                  '& .MuiDrawer-paper': {\n                      width: drawerWidth,\n                      boxSizing: 'border-box',\n                      backgroundColor: '#060b26',\n                      color: '#fff',\n                      cursor:'pointer'\n                  }\n              }}\n              variant=\"permanent\" \n              anchor='left'>\n              <Typography variant='h5' sx={{marginTop:\"15px\"}}>\n                  <SpeedOutlinedIcon/> Admin Dashboard\n              </Typography>\n              <List>\n                  {sidebarItems.map((item) => (\n                      <ListItem\n                          key={item.text}\n                          onClick={()=>navigate(item.path)}\n                          button>\n                          <ListItemIcon sx={{color: '#ffffff'}}>{item.icon}</ListItemIcon>\n                          <ListItemText>{ item.text}</ListItemText>\n                         \n                        </ListItem>\n                        \n                  ))}\n                   <ListItem onClick={handleLogoutClick}>\n                          <ListItemIcon sx={{color: '#ffffff'}}><PowerSettingsNewOutlinedIcon color='#ffffff' /></ListItemIcon>\n                          <ListItemText>Logout</ListItemText>\n                         \n                        </ListItem>\n                   \n              </List>\n      </Drawer>\n    </div>\n  )\n}\n\nexport default SideBar","import React, { useState, useEffect } from 'react'\nimport Grid from '@mui/material/Grid'\nimport { useNavigate } from 'react-router-dom'\nimport SideBar from \"../sidebar/SideBar\";\nimport NavBar from '../NavBar';\n\n\nconst Clerks= ({setClerkUser}) => {\n\n  const [adminId, setAdminId]= useState(localStorage.getItem('adminId'))\n\n\n   \n // let navigate  = useNavigate()\n  const [formData, setFormData] = useState({\n    full_name: '',\n    email:'',\n    password:'',\n    admin_id: adminId\n\n  })\n\n  const [clerks, setClerks] = useState([])\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    createClerk(formData);\n    console.log(formData);\n  }\n\n  //function adding clerk\n  const createClerk = (data) => {\n    fetch(\"/clerks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\":\"application/json\"\n      },\n      body:JSON.stringify(data)\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setFormData(data)\n        setClerkUser(data)\n        \n    })\n  }\n  \n  //handling form field state\n  const handleChange = (e) => {\n    setFormData({...formData, [e.target.name]:e.target.value})\n  }\n \n//fetch clerks\n  useEffect(() => {\n    fetch(`/admins/${adminId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data.clerks)\n        setClerks(data.clerks)\n    })\n  }, [])\n  \n  return (\n    <>\n      <SideBar />\n      <NavBar />\n    <Grid item xs={8}>\n      <div className='container mt-5 pt-3'>\n        <div className=\"row mt-5\">\n            <div className=\"col-md-6\">\n              <button className='btn btn-success my-3' data-bs-toggle=\"modal\"  data-bs-target='#form-modal'>Add Clerk</button>\n          </div>\n          {/* <div className=\"col-md-6 mt-5\">\n          <h3 className='my-3 '>Clerks</h3>\n          </div> */}\n        </div>\n\n      <div className=\"modal\" id=\"form-modal\">\n        <div className=\"modal-dialog modal-dialog-centered\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header mt-2\" >\n              <h3 className=\"modal-title \">New Clerk</h3>\n              <button className=\"btn-close\" ></button>\n            </div>\n    \n            <div className=\"modal-body\">\n            <form action=\"\" onSubmit={handleSubmit}>\n                <div className=\"row\">\n                <div className=\"col\">\n                    <input type=\"text\"\n                      name=\"full_name\"\n                      value={formData.full_name}\n                      onChange={(e) => handleChange(e)}\n                      placeholder='full name'\n                      className=\"form-control\"\n                    />\n                  </div>\n                  \n                  <div className=\"col\">\n                    <input type=\"text\"\n                      name=\"email\"\n                      value={formData.email}\n                      onChange={(e) => handleChange(e)}\n                      placeholder='email'\n                      className=\"form-control\"\n                    />\n                  </div>\n                </div>\n                <div className=\"row\">\n                  \n                  <div className=\"col\">\n                    <input type=\"text\"\n                      name=\"password\"\n                      value={formData.password}\n                      onChange={(e) => handleChange(e)}\n                      placeholder='password'\n                      className=\"form-control\"\n                    />\n                  </div>\n\n                  <div className=\"col\"  data-bs-dismiss=\"modal\">\n                        <input type=\"submit\"\n                        value=\"Submit\"\n                        className=\"btn btn-primary btn-block form-control mt-2\"\n                    />\n                  </div>\n          \n                </div>\n              </form>\n            </div>\n            {/*modal footer */}\n            {/* <div className=\"modal-footer\">\n              <button className=\"btn btn-danger\" data-bs-dismiss=\"modal\">Close</button>\n            </div> */}\n          </div>\n        </div>\n\n      </div>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 offset-2\">\n              <table className=\"table table-bordered table-dark\">\n        <thead>\n          <tr>\n            <th>Full Name</th>\n            <th>Email</th>\n            <th>Deactivate</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {clerks && clerks.map((clerk) => (\n            <tr key={clerk.id}>\n              <td>{clerk.full_name}</td>\n              <td>{clerk.email}</td>\n              <td><button className='btn btn-primary'>Deactivate</button></td>\n              <td><button className='btn btn-danger'>Delete</button></td>\n          </tr>\n        ))}\n        </tbody>\n      </table>\n              </div>\n            </div>     \n          </div> \n      </div>\n      </Grid>  \n      </>\n  )\n}\n\nexport default Clerks;","import React, {useEffect, useState } from \"react\";\n// import {useSelector, useDispatch} from 'react-redux'\nimport Grid from \"@mui/material/Grid\";\nimport SideBar from \"../sidebar/SideBar\";\n// import Clerks from \"../clerks/Clerks\";\n// import Spinner from '../../common/spinner/Spinner'\n// import { getItems } from \"../../features/items/ItemSlice\";\nimport NavBar from \"../NavBar\";\n\nconst Inventory = ({setClerkUser, setAdminUser}) => {\n\n\n  const [items, setItems] = useState([])\n\n  const[adminId, setAdminId] = useState(localStorage.getItem('adminId'))\n    \n  useEffect(() => {\n      fetch(`/admins/${adminId}`)\n          .then((res) => res.json())\n          .then((data) => {\n              console.log(data)\n              setItems(data.items)\n      })\n  },[])\n\n  return (\n    <>\n    <NavBar/>\n    <SideBar  setAdminuser={setAdminUser}/>\n    \n\n      <Grid item xs={8}>\n        <div className=\"container pt-5 \">\n          <div className=\"row mt-5 ml\">\n            <div className=\"col-md-6\"></div>\n          </div>\n\n          <div className=\"modal\" id=\"form-modal\">\n            <div className=\"modal-dialog modal-dialog-centered\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h3 className=\"modal-title d-flex align-items-sm-center\">New Inventory</h3>\n                  <button\n                    className=\"btn-close\"\n                    data-bs-dismiss=\"modal\"\n                  ></button>\n                </div>\n                <div className=\"modal-body\">\n                  <form action=\"\">\n                    <div className=\"row\">\n                      <div className=\"col my-2\">\n                        <input\n                          type=\"text\"\n                          name=\"name\"\n                          placeholder=\"Item Name\"\n                          className=\"form-control\"\n                        />\n                      </div>\n                      <div className=\"col my-2\">\n                        <input\n                          type=\"number\"\n                          className=\"form-control\"\n                          name=\"price\"\n                          placeholder=\"Price\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col\">\n                        <input\n                          type=\"text\"\n                          name=\"quantity\"\n                          placeholder=\"quantity\"\n                          className=\"form-control\"\n                        />\n                      </div>\n                      <div className=\"col\">\n                        <input\n                          type=\"text\"\n                          name=\"instock\"\n                          placeholder=\"instock\"\n                          className=\"form-control\"\n                        />\n                      </div>\n                      <div className=\"col\">\n                        <input\n                          type=\"number\"\n                          className=\"form-control\"\n                          name=\"spoilt\"\n                          placeholder=\"spoilt\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col my-2\">\n                        <input\n                          type=\"text\"\n                          name=\"sellingPrice\"\n                          placeholder=\"Selling Price\"\n                          className=\"form-control\"\n                        />\n                      </div>\n                      <div className=\"col my-2\">\n                        <input\n                          type=\"number\"\n                          className=\"form-control\"\n                          name=\"buyingPrice\"\n                          placeholder=\"Buying Price\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col my-2\">\n                        <input\n                          type=\"text\"\n                          name=\"status\"\n                          placeholder=\"payment status\"\n                          className=\"form-control\"\n                        />\n                      </div>\n                      <div className=\"col\">\n                        <input\n                          type=\"submit\"\n                          className=\"btn btn-primary btn-block form-control mt-2\"\n                        />\n                      </div>\n                    </div>\n                  </form>\n                </div>\n                <div className=\"modal-footer\">\n                  <button className=\"btn btn-danger\" data-bs-dismiss=\"modal\">\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-10 offset-md-2\">\n          <table className=\"table table-bordered table-dark\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Quantity</th>\n                <th>In Stock</th>\n                <th>Spoilt</th>\n                <th>Buying Price</th>\n                <th>Selling Price</th>\n                <th>Payment Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {items.map((item) => (\n                <tr key={item.id}>\n                  <td>{item.name}</td>\n                  <td>{item.quantity}</td>\n                  <td>{item.inStock}</td>\n                  <td>{item.spoilt}</td>\n                  <td>{item.BuyingPrice}</td>\n                  <td>{item.SellingPrice}</td>\n                  <td>{item.paid ? \"paid\" : \"pending\"}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n         </div>\n        </div>\n      </Grid>\n    </>\n  );\n};\n\nexport default Inventory;\n","import {useState,useEffect} from \"react\"\nimport React, { PureComponent } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\n\n\nexport default function Linegraph(){\n  const[data,setData]=useState([])\n\n  const[adminId, setAdminId] = useState(localStorage.getItem('adminId'))\n    \n  useEffect(() => {\n      fetch(`/admins/${adminId}`)\n          .then((res) => res.json())\n          .then((data) => {\n              console.log(data)\n              setData(data.items)\n      })\n  },[])\n \n\n    return (\n      <div className=\"linegraph\">\n        <ResponsiveContainer width=\"100%\" aspect={3}>\n          <LineChart\n            width={500}\n            height={300}\n            data={data}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5,\n            }}\n          >\n            {/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"SellingPrice\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n            <Line type=\"monotone\" dataKey=\"BuyingPrice\" stroke=\"#82ca9d\" />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    );\n}\n","import React from 'react'\nimport Linegraph from '../../pages/Linegraph'\nimport SideBar from \"../sidebar/SideBar\";\nimport NavBar from '../NavBar';\n\nfunction InventoryAnalytics() {\n  return (\n    <>\n    <NavBar/>\n    <SideBar/>\n    <div className=\"analytics-wrap\">\n      <div className=\"analytic-graph\"><Linegraph/></div>\n    </div>\n    \n    \n    </>\n  )\n}\n\nexport default InventoryAnalytics\n\n\n\n\n\n\n\n\n\n\n// import React, {useState, useEffect } from 'react'\n// import axios from 'axios'\n// import { Chart as ChartJS, BarElement, CategoryScale, LinearScale } from 'chart.js'\n// import { Bar } from 'react-chartjs-2'\n// import Grid from '@mui/material/Grid'\n\n\n// ChartJS.register(\n//   BarElement,\n//   CategoryScale,\n//   LinearScale\n// )\n\n\n// const InventoryAnalytics = () => {\n//   const [chartData, setChartData]  = useState({});\n//   const fetchInventories = () => {\n//     let name = [];\n//     let price = [];\n\n//     axios.get(\"/inventories\")\n//       .then(response => {\n//         console.log(response);\n//         for (const resObj of response.data) {\n//           name.push(resObj.name);\n//           price.push(parseInt(resObj.price))\n//         }\n\n//         setChartData({\n//           labels:name,\n//           datasets: [{\n//             label: \"Inventory Analytics\",\n//             data: price,\n//             backgroundColor: [\n//               'rgba(255, 99, 132, 0.2)',\n//               'rgba(54, 162, 235, 0.2)',\n//               'rgba(255, 206, 86, 0.2)',\n//               'rgba(75, 192, 192, 0.2)',\n//               'rgba(153, 102, 255, 0.2)',\n//               'rgba(255, 159, 64, 0.2)',\n//             ],\n//             borderColor: [\n//               'rgba(255, 99, 132, 0.2)',\n//               'rgba(54, 162, 235, 0.2)',\n//               'rgba(255, 206, 86, 0.2)',\n//               'rgba(75, 192, 192, 0.2)',\n//               'rgba(153, 102, 255, 0.2)',\n//               'rgba(255, 159, 64, 0.2)',\n//             ],\n//             borderWidth: 1\n//           }]\n//         })\n//     })\n//   }\n\n//   useEffect(() => {\n//     fetchInventories()\n//   },[])\n  \n//   const options = {\n//     maintainAspectRatio: false,\n//     scales: {\n//       y: {\n//         beginAtZero: true\n//       }\n//     },\n//     legend: {\n//       labels: {\n//         fontSize:26\n//       }\n//     }\n//   }\n//   return (\n//     <Grid item xs={8}>\n     \n//         <Bar\n//         data={chartData}\n//         options={options}\n//         height={400}\n//       />\n\n//     </Grid>\n//   )\n// }\n\n// export default InventoryAnalytics","import './clerk.css';\n// import ClerkNavbar from './components/ClerkPage/ClerkNavbar/Navbar';\nimport { Route, Routes } from \"react-router\";\n// import Home from './components/ClerkPage/pages/Home/Home';\nimport Table from \"./components/ClerkPage/ItemsTables/Table\"\n/*import ClerkPage from './ClerkPage';\nimport logo from './logo.svg';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport OrderForm from './components/ClerkPage/pages/Order/OrderForm';\nimport InventoryForm from './pages/Inventory/inventoryform';\nimport Table from \"./components/ClerkPage/ItemsTables/Table\"\nimport RequestTable from './components/ClerkPage/RequestItemTable.js/RequestTable';\nimport ClerkPage from './components/ClerkPage/ClerkPagex';*/\n\n//changed to clerklandingpage instead of app\nfunction ClerkLandingPage({setClerkUser}) {\n  return (\n<>\n    {/* <ClerkNavbar /> */}\n        <Routes>\n        <Route exact path='/' element={<Table setClerkUser={setClerkUser}  />} />\n          {/*<Route exact path='/home' element={<Home/>} />\n          <Route path='/orders' element={<OrderForm/>} />\n          <Route path='/addItems' element={<Table/>} />\n          <Route path='/addRequests' element={<RequestTable/>} />\n          <Route path='/oldPage' element={<ClerkPage/>} />*/}\n        </Routes>\n\n\n      </>\n  );\n}\n\nexport default ClerkLandingPage;\n","import { FaPhoneSlash } from \"react-icons/fa\";\nimport { FaClock} from \"react-icons/fa\";\nimport { FaRocket } from 'react-icons/fa';\nimport React from 'react'\nimport Footer from './footer/Footer'\nimport MainBar from './MainBar/MainBar'\n\nfunction ShowCase() {\n  return (\n    <div>\n      <>\n      <MainBar/>\n      <section className='showcase'>\n        <div className='showcase-overlay'>\n          <h1>Amazing employees deserve amazing software</h1>\n          <p>\n          The only platform you will ever need to help run your business:\n      integrated apps, kept simple, and loved by millions of happy users\n          </p>\n        </div>\n        <div className=\"body-section\">\n          <div className=\"trusted\">\n            <h3>TRUSTED PARTNERS</h3>\n            <div className='logo'>\n              <img className='logo-1' alt=\"\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/United_Parcel_Service_logo_2014.svg/1718px-United_Parcel_Service_logo_2014.svg.png\"/>\n              <img alt=\"\" src=\"https://assets-global.website-files.com/618ac079e7dd392826f282d6/618bbbc3ed9711ebf9fd0683_logo.svg\"/>\n              <img alt=\"\" src='https://cdn.freebiesupply.com/logos/thumbs/1x/dhl-1-logo.png'/>\n              <img alt=\"\" src=\"https://cdn.freebiesupply.com/logos/large/2x/fedex-logo-svg-vector.svg\"/>\n              <img alt=\"\" src=\"https://www.maersk.com/~/media_sc9/maersk/homepage/brands/hs_logo_tagline_colour_4c_pos.svg\"/>\n            </div>\n            <div className=\"why-wrapper\">\n              <div className='why-section'>\n                <h2 className='why-h3'>WHY <element className=\"why-title\">LOCALSHOP</element></h2>\n                <p> Manage all your  inventory with ease anytime, anywhere.\n                   Create a new store assign roles and sit back and watch it get done.all with a click of a button.Track,manage and assign roles with ease.Trusted by millions of business owners world wide. </p>\n              </div>\n            </div>\n              <div className=\"action-wrapper\">\n                <div className=\"action-card\">\n                  <h2>  <FaPhoneSlash /></h2>\n                  <p>No more calling around and being on hold for long periods of time.</p>\n                </div>\n                <div className=\"action-card mid-action\">\n                  <h2>  <FaClock /></h2>\n                  <p>Get your inventory list upto date, listed,ordered and delivered on time.No more hustle </p>\n                </div>\n                <div className=\"action-card\">\n                  <h2>  <FaRocket/></h2>\n                  <p>Time is money.More speed equals more money.We Manage your work fast.</p>\n                </div>\n      \n              </div>\n              <h1 className=\"comment-title\">Loved by Businesses across the country</h1>\n              <div className=\"comment\">\n                <div className=\"comment-1\">\n                  <p>\"LocalShop is an open ERP system. so it's easy to customize as per need. LocalShop already provides lots of services purchase, inventory which are very useful and easy to handle. From small-scale industries to Multi-National companies you Odoo ERP System.  </p>\n                  <div className=\"dp\"><img alt=\"\" src=\"https://user-images.githubusercontent.com/63696529/196117661-57f87a6f-2155-4328-8b48-fa27d6ec85a2.png\"/><h5 className=\"dp-title\">Evans Rutto</h5></div>\n                </div>\n                <div className=\"comment-1\">\n                <p>\"A simple menu that can be accessed through any device is a very pronounced advantage when compared to other ERPs. This makes it easier for us to be able to access and work on a mobile basis. ,\" </p>\n                <div className=\"dp\"><img alt=\"\" src=\"https://user-images.githubusercontent.com/63696529/196118175-d8a7884b-8be5-4b21-be9a-23ed78b187be.png\"/><h5 className=\"dp-title\">Billy Mwangi</h5></div>\n                </div>\n                <div className=\"comment-1\">\n                <p>\"LocalShop is super customizable. Anything you would like to be developed is possible and integrations with tons of apps are already made. If you want to integrate new apps,\"</p>\n                <div className=\"dp\"><img alt=\"\" src=\"https://user-images.githubusercontent.com/63696529/196118387-e3852151-5f7d-4426-8416-f8b679f77e17.png\"/><h5 className=\"dp-title\"> Peter Ndumia</h5></div>\n                </div>\n                <div className=\"comment-1\">\n                <p>\"The accounts receivable and accounts payable function automatically makes payments to suppliers, without setbacks, which makes my job easier.\", </p>\n                <div className=\"dp\"><img alt=\"\" src=\"https://user-images.githubusercontent.com/63696529/196118581-24c47276-aecb-43d3-bef1-13c5cfa32371.png\"/><h5 className=\"dp-title\">Geoffrey Meru</h5></div>\n                </div>\n                <div className=\"comment-1\">\n                <p>\"it is a very flexible system, many different functions can be in one placе. The most important thing is that you can implement a large number of integrations with other services.\" </p>\n                <div className=\"dp\"><img alt=\"\" src=\"https://images.unsplash.com/photo-1533738363-b7f9aef128ce?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8Y2F0JTIwd2l0aCUyMGdsYXNzZXN8ZW58MHx8MHx8&w=1000&q=80\"/><h5 className=\"dp-title\">James Maina</h5></div>\n                </div>\n                <div className=\"comment-1\">\n                <p>\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been th\" </p>\n                <div className=\"dp\"><img alt=\"\" src=\"https://imgk.timesnownews.com/story/66603010_1317351581756321_4675944928644445097_n.jpg\"/> <h5 className=\"dp-title\">LIncolin Angaya</h5></div>\n                </div>\n              </div>\n              <div className=\"my-footer\"><Footer/></div>\n          </div>\n        </div>\n      </section>\n      </>\n    </div>\n  )\n}\n\nexport default ShowCase\n","import React from 'react'\nimport { Route, Routes } from \"react-router\";\nimport \"../MainLandingPage/design.css\"\nimport ShowCase from './ShowCase'\n\n\n{/*import Register from './RegisterMerchant/Register'\nimport MerchantLogIn from './Signin/MerchantLogin/MerchantLogIn'\nimport AdminLogin from './Signin/AdminLogin/AdminLogin'\nimport ClerkLogin from './Signin/ClerkLogin/ClerkLogin'*/}\n\n\nfunction Landing() {\n  return (\n    <>\n    {/* <h1>Hello world</h1> */}\n      \n   \n        <Routes>\n          <Route exact path='/' element={<ShowCase/> } />\n          {/*<Route path='/mlog-in' element={<MerchantLogIn/>} />\n          <Route path='/alog-in' element={<AdminLogin/>} />\n          <Route path='/clog-in' element={<ClerkLogin/>} />\n          <Route path='/Register' element={<Register/>} />*/}\n\n        </Routes>\n    \n      \n    </>\n  )\n}\n\nexport default Landing\n","import React,{useState, useEffect} from 'react'\n\nconst Orders = () => {\n\n    const [orders, setOrders] = useState([])\n    const[adminId, setAdminId] = useState(localStorage.getItem('adminId'))\n    \n    useEffect(() => {\n        fetch(`/admins/${adminId}`)\n            .then((res) => res.json())\n            .then((data) => {\n                console.log(data)\n                setOrders(data.requested_items)\n        })\n    },[])\n\n  return (\n    \n    <div className='container pt-5'>\n    <div className=\"row\">\n        <div className=\"col-md-10 offset-md-2\">\n          <h3>Order Requests</h3>\n        <table className=\"table table-bordered table-dark\">\n  <thead>\n    <tr>\n      <th>Item</th>\n      <th>Quantity</th>\n      <th>Clerk</th>\n      <th>Date</th>\n    </tr>\n  </thead>\n  <tbody>\n    {orders.map((order) => (\n      <tr key={order.id}>\n        <td>{order.item_name}</td>\n        <td>{order.quantity}</td>\n        <td>{order.clerk_name}</td>\n        <td>{order.date}</td>\n    </tr>\n  ))}\n  </tbody>\n    </table>\n  </div>\n</div>\n</div>\n  )\n}\n\nexport default Orders","import React from 'react';\nimport Orders from './Orders';\nimport SideBar from \"../sidebar/SideBar\";\nimport NavBar from '../NavBar';\n\n\nexport default function OrderRequests() {\n  return (\n    <div>\n        \n        <Orders />\n        <SideBar />\n        <NavBar/>\n      \n      \n    </div>\n  );\n}\n","import React,{useState} from 'react'\nimport './App.css';\nimport Merchant from './Merchant';\nimport { Route, Routes } from \"react-router\";\nimport StorePage from './pages/StorePage';\n// import OrderForm from './components/ClerkPage/pages/Order/OrderForm';\nimport Table from \"./components/ClerkPage/ItemsTables/Table\"\nimport RequestTable from './components/ClerkPage/RequestItemTable.js/RequestTable';\nimport ClerkPage from './components/ClerkPage/ClerkPagex';\nimport MerchantLogIn from './MainLandingPage/Signin/MerchantLogin/MerchantLogIn';\nimport AdminLogin from './MainLandingPage/Signin/AdminLogin/AdminLogin';\nimport ClerkLogin from './MainLandingPage/Signin/ClerkLogin/ClerkLogin';\nimport Register from './MainLandingPage/RegisterMerchant/Register';\nimport \"./MainLandingPage/design.css\"\nimport Clerk from './components/clerks/Clerks'\nimport Inventory from './components/inventory/Inventory'\nimport InventoryAnalytics from './components/analytics/InventoryAnalytics';\nimport ClerkLandingPage from './ClerkLandingPage';\nimport Landing from './MainLandingPage/Landing'\nimport OrderRequests from './components/orders/OrderRequests';\n\n\nfunction App() {\n  const [user, setUser]= useState({})\n  const [adminUser, setAdminUser] =useState({})\n  const [clerkUser, setClerkUser] =useState({})\n  \n  return (\n  \n    <div className=\"App\">\n          \n      <Routes>\n       \n \n      <Route path=\"/merchant\" element={<Merchant   adminUser={adminUser} setAdminUser={setAdminUser}  user={user} setUser={setUser} />}></Route>\n  \n \n      \n\n \n        \n      <Route exact path=\"/\" element={<Landing  setUser={setUser}/> }></Route>\n      <Route path='/Register' element={<Register setUser={setUser} />} />\n      <Route path='/mlog-in' element={<MerchantLogIn user={user} setUser={setUser} />} />\n      <Route path='/alog-in' element={<AdminLogin adminUser={adminUser} setAdminUser={setAdminUser}/>} />\n      <Route path='/clog-in' element={<ClerkLogin setClerkUser={setClerkUser} />} />\n\n\n      <Route path=\"/inventories\" element={<Inventory setAdminUser={setAdminUser}   setClerkUser={setClerkUser}   />}></Route>\n      <Route path=\"/clerk\" element={<ClerkLandingPage clerkUser = {clerkUser} setClerkUser={setClerkUser}  />}></Route>\n\n       <Route path=\"/storepage/:storeId\" element={<StorePage />}></Route>\n        <Route path='/orders' element={<OrderRequests/>} />\n        <Route path='/addItems' element={<Table/>} />\n        <Route path='/addRequests' element={<RequestTable/>} />\n        <Route path=\"/clerks\" element={<Clerk setClerkUser={setClerkUser} />}></Route>\n        <Route path='/oldPage' element={<ClerkPage/>} />\n        <Route path='/analytics' element={<InventoryAnalytics/>}/>\n\n\n\n\n\n       \n       \n        </Routes>\n    </div>\n  )\n}\nexport default App;\n","import axios from 'axios'\n\n//fetch items\nexport const fetchItems = async () => {\n    const response = await axios.get('http://localhost:3000/items')\n    return response.data;\n};\n\nconst ItemsAPIService = { fetchItems };\nexport default ItemsAPIService;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport ItemsAPIService from './ItemAPIService'\n\nconst initialState = {\n    items:[],\n    isError: false,\n    loading: false,\n    isSuccess: false,\n    message:''\n}\n\n//get all items\nexport const getItems = createAsyncThunk(\n    'items/fetchall',\n    async(_, thunkAPI) => {\n    try {\n        return await ItemsAPIService.fetchItems();\n    } catch (error) {\n        const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString();\n\n        return thunkAPI.rejectWithValue(message)\n    }\n    }\n)\n\nexport const ItemSlice = createSlice({\n    name: \"items\",\n    initialState,\n    reducers: {\n        reset:(state)=>initialState\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(getItems.pending, (state) => {\n                state.loading = true;\n            })\n            .addCase(getItems.fulfilled, (state, action) => {\n                state.loading = false;\n                state.isSuccess = true;\n                state.items = action.payload\n            })\n            .addCase(getItems.rejected, (state, action) => {\n                state.isSuccess = false;\n                state.isError = true;\n                state.message = action.payload;\n        })\n    }\n})\n\nexport const { reset } = ItemSlice.actions\nexport default ItemSlice.reducer;","import axios from 'axios'\n\n//fetch requested items\nexport const fetchOrders = async () => {\n    const response = await axios.get('http://localhost:3000/requested_items')\n    console.log(response.data)\n    return response.data;\n};\n\nconst OrdersAPIService = { fetchOrders };\nexport default OrdersAPIService;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport OrdersAPIService from './OrderAPIService'\n\nconst initialState = {\n    items:[],\n    isError: false,\n    loading: false,\n    isSuccess: false,\n    message:''\n}\n\n//get all items\nexport const getOrders = createAsyncThunk(\n    'orders/fetchall',\n    async(_, thunkAPI) => {\n    try {\n        return await OrdersAPIService.fetchOrders();\n    } catch (error) {\n        const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString();\n\n        return thunkAPI.rejectWithValue(message)\n    }\n    }\n)\n\nexport const OrderSlice = createSlice({\n    name: \"orders\",\n    initialState,\n    reducers: {\n        reset:(state)=>initialState\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(getOrders.pending, (state) => {\n                state.loading = true;\n            })\n            .addCase(getOrders.fulfilled, (state, action) => {\n                state.loading = false;\n                state.isSuccess = true;\n                state.items = action.payload\n            })\n            .addCase(getOrders.rejected, (state, action) => {\n                state.isSuccess = false;\n                state.isError = true;\n                state.message = action.payload;\n        })\n    }\n})\n\nexport const { reset } = OrderSlice.actions\nexport default OrderSlice.reducer;","import { configureStore } from '@reduxjs/toolkit'\nimport ItemReducer from '../features/items/ItemSlice'\nimport OrderReducer from '../features/orders/OrderSlice'\n\n\nexport const store = configureStore({\n  reducer: {\n    items: ItemReducer,\n    orders: OrderReducer\n  },\n})","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport {Provider} from 'react-redux'\nimport { store } from \"./app/store\";\nimport \"./index.css\";\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport '../node_modules/bootstrap/dist/js/bootstrap.bundle'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}